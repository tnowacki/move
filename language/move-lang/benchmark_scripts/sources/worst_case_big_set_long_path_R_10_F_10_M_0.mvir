// R = 10
// F = 10
// M = 0
module 0x42.Example {

    struct S0 has drop { f0: u64, f1: u64, f2: u64, f3: u64, f4: u64, f5: u64, f6: u64, f7: u64, f8: u64, f9: u64 }
    struct S1 has drop { f0: Self.S0, f1: Self.S0, f2: Self.S0, f3: Self.S0, f4: Self.S0, f5: Self.S0, f6: Self.S0, f7: Self.S0, f8: Self.S0, f9: Self.S0 }
    struct S2 has drop { f0: Self.S1, f1: Self.S1, f2: Self.S1, f3: Self.S1, f4: Self.S1, f5: Self.S1, f6: Self.S1, f7: Self.S1, f8: Self.S1, f9: Self.S1 }
    struct S3 has drop { f0: Self.S2, f1: Self.S2, f2: Self.S2, f3: Self.S2, f4: Self.S2, f5: Self.S2, f6: Self.S2, f7: Self.S2, f8: Self.S2, f9: Self.S2 }
    struct S4 has drop { f0: Self.S3, f1: Self.S3, f2: Self.S3, f3: Self.S3, f4: Self.S3, f5: Self.S3, f6: Self.S3, f7: Self.S3, f8: Self.S3, f9: Self.S3 }
    struct S5 has drop { f0: Self.S4, f1: Self.S4, f2: Self.S4, f3: Self.S4, f4: Self.S4, f5: Self.S4, f6: Self.S4, f7: Self.S4, f8: Self.S4, f9: Self.S4 }
    struct S6 has drop { f0: Self.S5, f1: Self.S5, f2: Self.S5, f3: Self.S5, f4: Self.S5, f5: Self.S5, f6: Self.S5, f7: Self.S5, f8: Self.S5, f9: Self.S5 }
    struct S7 has drop { f0: Self.S6, f1: Self.S6, f2: Self.S6, f3: Self.S6, f4: Self.S6, f5: Self.S6, f6: Self.S6, f7: Self.S6, f8: Self.S6, f9: Self.S6 }
    struct S8 has drop { f0: Self.S7, f1: Self.S7, f2: Self.S7, f3: Self.S7, f4: Self.S7, f5: Self.S7, f6: Self.S7, f7: Self.S7, f8: Self.S7, f9: Self.S7 }
    struct S9 has drop { f0: Self.S8, f1: Self.S8, f2: Self.S8, f3: Self.S8, f4: Self.S8, f5: Self.S8, f6: Self.S8, f7: Self.S8, f8: Self.S8, f9: Self.S8 }

    worst_case_big_set_long_path(l9: &mut Self.S9, cond: bool) {
        let l8: &mut Self.S8;
        let l7: &mut Self.S7;
        let l6: &mut Self.S6;
        let l5: &mut Self.S5;
        let l4: &mut Self.S4;
        let l3: &mut Self.S3;
        let l2: &mut Self.S2;
        let l1: &mut Self.S1;
        let l0: &mut Self.S0;
        let big_set: &mut u64;

        l8 = &mut copy(l9).S9::f0;
        if (copy(cond)) { l8 = &mut copy(l9).S9::f1; }
        else { if (copy(cond)) { l8 = &mut copy(l9).S9::f2; }
        else { if (copy(cond)) { l8 = &mut copy(l9).S9::f3; }
        else { if (copy(cond)) { l8 = &mut copy(l9).S9::f4; }
        else { if (copy(cond)) { l8 = &mut copy(l9).S9::f5; }
        else { if (copy(cond)) { l8 = &mut copy(l9).S9::f6; }
        else { if (copy(cond)) { l8 = &mut copy(l9).S9::f7; }
        else { if (copy(cond)) { l8 = &mut copy(l9).S9::f8; }
        else { if (copy(cond)) { l8 = &mut copy(l9).S9::f9; }
        }}}}}}}}

        l7 = &mut copy(l8).S8::f0;
        if (copy(cond)) { l7 = &mut copy(l8).S8::f1; }
        else { if (copy(cond)) { l7 = &mut copy(l8).S8::f2; }
        else { if (copy(cond)) { l7 = &mut copy(l8).S8::f3; }
        else { if (copy(cond)) { l7 = &mut copy(l8).S8::f4; }
        else { if (copy(cond)) { l7 = &mut copy(l8).S8::f5; }
        else { if (copy(cond)) { l7 = &mut copy(l8).S8::f6; }
        else { if (copy(cond)) { l7 = &mut copy(l8).S8::f7; }
        else { if (copy(cond)) { l7 = &mut copy(l8).S8::f8; }
        else { if (copy(cond)) { l7 = &mut copy(l8).S8::f9; }
        }}}}}}}}

        l6 = &mut copy(l7).S7::f0;
        if (copy(cond)) { l6 = &mut copy(l7).S7::f1; }
        else { if (copy(cond)) { l6 = &mut copy(l7).S7::f2; }
        else { if (copy(cond)) { l6 = &mut copy(l7).S7::f3; }
        else { if (copy(cond)) { l6 = &mut copy(l7).S7::f4; }
        else { if (copy(cond)) { l6 = &mut copy(l7).S7::f5; }
        else { if (copy(cond)) { l6 = &mut copy(l7).S7::f6; }
        else { if (copy(cond)) { l6 = &mut copy(l7).S7::f7; }
        else { if (copy(cond)) { l6 = &mut copy(l7).S7::f8; }
        else { if (copy(cond)) { l6 = &mut copy(l7).S7::f9; }
        }}}}}}}}

        l5 = &mut copy(l6).S6::f0;
        if (copy(cond)) { l5 = &mut copy(l6).S6::f1; }
        else { if (copy(cond)) { l5 = &mut copy(l6).S6::f2; }
        else { if (copy(cond)) { l5 = &mut copy(l6).S6::f3; }
        else { if (copy(cond)) { l5 = &mut copy(l6).S6::f4; }
        else { if (copy(cond)) { l5 = &mut copy(l6).S6::f5; }
        else { if (copy(cond)) { l5 = &mut copy(l6).S6::f6; }
        else { if (copy(cond)) { l5 = &mut copy(l6).S6::f7; }
        else { if (copy(cond)) { l5 = &mut copy(l6).S6::f8; }
        else { if (copy(cond)) { l5 = &mut copy(l6).S6::f9; }
        }}}}}}}}

        l4 = &mut copy(l5).S5::f0;
        if (copy(cond)) { l4 = &mut copy(l5).S5::f1; }
        else { if (copy(cond)) { l4 = &mut copy(l5).S5::f2; }
        else { if (copy(cond)) { l4 = &mut copy(l5).S5::f3; }
        else { if (copy(cond)) { l4 = &mut copy(l5).S5::f4; }
        else { if (copy(cond)) { l4 = &mut copy(l5).S5::f5; }
        else { if (copy(cond)) { l4 = &mut copy(l5).S5::f6; }
        else { if (copy(cond)) { l4 = &mut copy(l5).S5::f7; }
        else { if (copy(cond)) { l4 = &mut copy(l5).S5::f8; }
        else { if (copy(cond)) { l4 = &mut copy(l5).S5::f9; }
        }}}}}}}}

        l3 = &mut copy(l4).S4::f0;
        if (copy(cond)) { l3 = &mut copy(l4).S4::f1; }
        else { if (copy(cond)) { l3 = &mut copy(l4).S4::f2; }
        else { if (copy(cond)) { l3 = &mut copy(l4).S4::f3; }
        else { if (copy(cond)) { l3 = &mut copy(l4).S4::f4; }
        else { if (copy(cond)) { l3 = &mut copy(l4).S4::f5; }
        else { if (copy(cond)) { l3 = &mut copy(l4).S4::f6; }
        else { if (copy(cond)) { l3 = &mut copy(l4).S4::f7; }
        else { if (copy(cond)) { l3 = &mut copy(l4).S4::f8; }
        else { if (copy(cond)) { l3 = &mut copy(l4).S4::f9; }
        }}}}}}}}

        l2 = &mut copy(l3).S3::f0;
        if (copy(cond)) { l2 = &mut copy(l3).S3::f1; }
        else { if (copy(cond)) { l2 = &mut copy(l3).S3::f2; }
        else { if (copy(cond)) { l2 = &mut copy(l3).S3::f3; }
        else { if (copy(cond)) { l2 = &mut copy(l3).S3::f4; }
        else { if (copy(cond)) { l2 = &mut copy(l3).S3::f5; }
        else { if (copy(cond)) { l2 = &mut copy(l3).S3::f6; }
        else { if (copy(cond)) { l2 = &mut copy(l3).S3::f7; }
        else { if (copy(cond)) { l2 = &mut copy(l3).S3::f8; }
        else { if (copy(cond)) { l2 = &mut copy(l3).S3::f9; }
        }}}}}}}}

        l1 = &mut copy(l2).S2::f0;
        if (copy(cond)) { l1 = &mut copy(l2).S2::f1; }
        else { if (copy(cond)) { l1 = &mut copy(l2).S2::f2; }
        else { if (copy(cond)) { l1 = &mut copy(l2).S2::f3; }
        else { if (copy(cond)) { l1 = &mut copy(l2).S2::f4; }
        else { if (copy(cond)) { l1 = &mut copy(l2).S2::f5; }
        else { if (copy(cond)) { l1 = &mut copy(l2).S2::f6; }
        else { if (copy(cond)) { l1 = &mut copy(l2).S2::f7; }
        else { if (copy(cond)) { l1 = &mut copy(l2).S2::f8; }
        else { if (copy(cond)) { l1 = &mut copy(l2).S2::f9; }
        }}}}}}}}

        l0 = &mut copy(l1).S1::f0;
        if (copy(cond)) { l0 = &mut copy(l1).S1::f1; }
        else { if (copy(cond)) { l0 = &mut copy(l1).S1::f2; }
        else { if (copy(cond)) { l0 = &mut copy(l1).S1::f3; }
        else { if (copy(cond)) { l0 = &mut copy(l1).S1::f4; }
        else { if (copy(cond)) { l0 = &mut copy(l1).S1::f5; }
        else { if (copy(cond)) { l0 = &mut copy(l1).S1::f6; }
        else { if (copy(cond)) { l0 = &mut copy(l1).S1::f7; }
        else { if (copy(cond)) { l0 = &mut copy(l1).S1::f8; }
        else { if (copy(cond)) { l0 = &mut copy(l1).S1::f9; }
        }}}}}}}}

        big_set = &mut copy(l0).S0::f0;
        if (copy(cond)) { big_set = &mut copy(l0).S0::f1; }
        else { if (copy(cond)) { big_set = &mut copy(l0).S0::f2; }
        else { if (copy(cond)) { big_set = &mut copy(l0).S0::f3; }
        else { if (copy(cond)) { big_set = &mut copy(l0).S0::f4; }
        else { if (copy(cond)) { big_set = &mut copy(l0).S0::f5; }
        else { if (copy(cond)) { big_set = &mut copy(l0).S0::f6; }
        else { if (copy(cond)) { big_set = &mut copy(l0).S0::f7; }
        else { if (copy(cond)) { big_set = &mut copy(l0).S0::f8; }
        else { if (copy(cond)) { big_set = &mut copy(l0).S0::f9; }
        }}}}}}}}

        *move(big_set) = 0;
        return;
    }

}
