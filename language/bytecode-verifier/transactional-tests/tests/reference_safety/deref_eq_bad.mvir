//# publish
module 0x1.M {
    struct T {v : u64}

    public new(v: u64): Self.T {
        return T{v: move(v)};
    }

    public compare(t1: &mut Self.T, t2: &mut Self.T) : bool {
        let b: bool;
        let x_ref: &mut u64;
        x_ref = &mut copy(t1).T::v;
        // now valid! Can always read
        b = move(t1) == move(t2);
        return move(b);
    }
}
