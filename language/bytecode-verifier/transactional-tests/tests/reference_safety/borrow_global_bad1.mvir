//# publish --address 0x1
module A {
    import 0x1.Signer;
    struct T has key, drop {v: u64}

    public A0(account: &signer, addr: address) acquires T {
        let x: &mut Self.T;
        let y: &mut Self.T;
        let v: &mut u64;
        let sender: address;
        sender = Signer.address_of(move(account));
        x = borrow_global_mut<T>(move(sender));
        y = borrow_global_mut<T>(move(addr));
        v = &mut move(y).v;
        *move(x) = T { v: 0 };
        *move(v) = 0;
        return;
    }
}
